name: 'angular-kratos'

volumes:
  postgres_data:
  rabbitmq_data:

services:

#  backend:
#    build: ./backend
#    container_name: backend
#    restart: on-failure
#    ports:
#      - '8000:8000'
#    environment:
#      - PORT=8000
#      - KRATOS_URL=http://kratos:4433
#    depends_on:
#      - kratos

  postgres:
    image: postgres:15
    container_name: database
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=application,kratos
    ports:
      - '5432:5432'
    volumes:
      - ./config/database/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5

  kratos-migrate:
    image: oryd/kratos
    container_name: kratos_db_migrate
    environment:
      - DSN=postgres://user:password@postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - ./config/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes

  kratos:
    image: oryd/kratos
    container_name: kratos
    env_file:
      - .env
    ports:
      - '4433:4433'
      - '4434:4434'
    volumes:
      - ./config/kratos:/etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    extra_hosts:
        - "host.docker.internal:host-gateway"

  oathkeeper:
    image: oryd/oathkeeper
    container_name: api_gateway
    depends_on:
      - kratos
    ports:
      - '8080:4455'
      - '4456:4456'
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
    restart: on-failure
    volumes:
      - ./config/oathkeeper:/etc/config/oathkeeper
    extra_hosts:
        - "host.docker.internal:host-gateway"

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - 1025:1025
      - 4436:4436
      - 4437:4437
